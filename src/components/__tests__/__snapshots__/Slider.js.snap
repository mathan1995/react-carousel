// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Slider /> Should match the snapshot with multiple children 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Slider
    Dot={<styled.li />}
    DotsWrapper={[Function]}
    LeftArrow={<styled.button />}
    RightArrow={<styled.button />}
    afterSlide={null}
    autoSlide={2000}
    beforeSlide={null}
    cardsToShow={null}
    hideArrowsOnNoSlides={true}
    infinite={true}
    margin="0px"
    padding="0px 20px"
    pauseOnMouseOver={true}
    responsive={null}
    showArrows={true}
    showDots={true}
  >
    <div />
    <h1>
      Hello
    </h1>
  </Slider>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <styled.div
          Dot={<styled.li />}
          LeftArrow={<styled.button />}
          RightArrow={<styled.button />}
          afterSlide={null}
          autoSlide={2000}
          beforeSlide={null}
          hideArrowsOnNoSlides={true}
          infinite={true}
          margin="0px"
          padding="0px 20px"
          responsive={null}
        >
          <styled.div>
            <styled.div
              translateX={0}
            >
              <styled.div
                width={50}
              >
                <div />
              </styled.div>
              <styled.div
                width={50}
              >
                <h1>
                  Hello
                </h1>
              </styled.div>
            </styled.div>
          </styled.div>
        </styled.div>,
        <styled.ul>
          <styled.li
            active={true}
            onClick={[Function]}
          />
        </styled.ul>,
      ],
      "onMouseEnter": [Function],
      "onMouseLeave": [Function],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "Dot": <styled.li />,
          "LeftArrow": <styled.button />,
          "RightArrow": <styled.button />,
          "afterSlide": null,
          "autoSlide": 2000,
          "beforeSlide": null,
          "children": Array [
            false,
            <styled.div>
              <styled.div
                translateX={0}
              >
                <styled.div
                  width={50}
                >
                  <div />
                </styled.div>
                <styled.div
                  width={50}
                >
                  <h1>
                    Hello
                  </h1>
                </styled.div>
              </styled.div>
            </styled.div>,
            false,
          ],
          "hideArrowsOnNoSlides": true,
          "infinite": true,
          "margin": "0px",
          "padding": "0px 20px",
          "responsive": null,
        },
        "ref": null,
        "rendered": Array [
          false,
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <styled.div
                translateX={0}
              >
                <styled.div
                  width={50}
                >
                  <div />
                </styled.div>
                <styled.div
                  width={50}
                >
                  <h1>
                    Hello
                  </h1>
                </styled.div>
              </styled.div>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <styled.div
                    width={50}
                  >
                    <div />
                  </styled.div>,
                  <styled.div
                    width={50}
                  >
                    <h1>
                      Hello
                    </h1>
                  </styled.div>,
                ],
                "translateX": 0,
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": "0",
                  "nodeType": "class",
                  "props": Object {
                    "children": <div />,
                    "width": 50,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {},
                    "ref": null,
                    "rendered": null,
                    "type": "div",
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "1",
                  "nodeType": "class",
                  "props": Object {
                    "children": <h1>
                      Hello
                    </h1>,
                    "width": 50,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Hello",
                    },
                    "ref": null,
                    "rendered": "Hello",
                    "type": "h1",
                  },
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            "type": [Function],
          },
          false,
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <styled.li
              active={true}
              onClick={[Function]}
            />,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": "0",
            "nodeType": "class",
            "props": Object {
              "active": true,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <styled.div
            Dot={<styled.li />}
            LeftArrow={<styled.button />}
            RightArrow={<styled.button />}
            afterSlide={null}
            autoSlide={2000}
            beforeSlide={null}
            hideArrowsOnNoSlides={true}
            infinite={true}
            margin="0px"
            padding="0px 20px"
            responsive={null}
          >
            <styled.div>
              <styled.div
                translateX={0}
              >
                <styled.div
                  width={50}
                >
                  <div />
                </styled.div>
                <styled.div
                  width={50}
                >
                  <h1>
                    Hello
                  </h1>
                </styled.div>
              </styled.div>
            </styled.div>
          </styled.div>,
          <styled.ul>
            <styled.li
              active={true}
              onClick={[Function]}
            />
          </styled.ul>,
        ],
        "onMouseEnter": [Function],
        "onMouseLeave": [Function],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "Dot": <styled.li />,
            "LeftArrow": <styled.button />,
            "RightArrow": <styled.button />,
            "afterSlide": null,
            "autoSlide": 2000,
            "beforeSlide": null,
            "children": Array [
              false,
              <styled.div>
                <styled.div
                  translateX={0}
                >
                  <styled.div
                    width={50}
                  >
                    <div />
                  </styled.div>
                  <styled.div
                    width={50}
                  >
                    <h1>
                      Hello
                    </h1>
                  </styled.div>
                </styled.div>
              </styled.div>,
              false,
            ],
            "hideArrowsOnNoSlides": true,
            "infinite": true,
            "margin": "0px",
            "padding": "0px 20px",
            "responsive": null,
          },
          "ref": null,
          "rendered": Array [
            false,
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <styled.div
                  translateX={0}
                >
                  <styled.div
                    width={50}
                  >
                    <div />
                  </styled.div>
                  <styled.div
                    width={50}
                  >
                    <h1>
                      Hello
                    </h1>
                  </styled.div>
                </styled.div>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    <styled.div
                      width={50}
                    >
                      <div />
                    </styled.div>,
                    <styled.div
                      width={50}
                    >
                      <h1>
                        Hello
                      </h1>
                    </styled.div>,
                  ],
                  "translateX": 0,
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": "0",
                    "nodeType": "class",
                    "props": Object {
                      "children": <div />,
                      "width": 50,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {},
                      "ref": null,
                      "rendered": null,
                      "type": "div",
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": "1",
                    "nodeType": "class",
                    "props": Object {
                      "children": <h1>
                        Hello
                      </h1>,
                      "width": 50,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Hello",
                      },
                      "ref": null,
                      "rendered": "Hello",
                      "type": "h1",
                    },
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
              "type": [Function],
            },
            false,
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <styled.li
                active={true}
                onClick={[Function]}
              />,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": "0",
              "nodeType": "class",
              "props": Object {
                "active": true,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`<Slider /> Should match the snapshot with single child 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Slider
    Dot={<styled.li />}
    DotsWrapper={[Function]}
    LeftArrow={<styled.button />}
    RightArrow={<styled.button />}
    afterSlide={null}
    autoSlide={2000}
    beforeSlide={null}
    cardsToShow={null}
    hideArrowsOnNoSlides={true}
    infinite={true}
    margin="0px"
    padding="0px 20px"
    pauseOnMouseOver={true}
    responsive={null}
    showArrows={true}
    showDots={true}
  >
    <div />
  </Slider>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <styled.div
          Dot={<styled.li />}
          LeftArrow={<styled.button />}
          RightArrow={<styled.button />}
          afterSlide={null}
          autoSlide={2000}
          beforeSlide={null}
          hideArrowsOnNoSlides={true}
          infinite={true}
          margin="0px"
          padding="0px 20px"
          responsive={null}
        >
          <styled.div>
            <styled.div
              translateX={0}
            >
              <styled.div
                width={100}
              >
                <div />
              </styled.div>
            </styled.div>
          </styled.div>
        </styled.div>,
        <styled.ul>
          <styled.li
            active={true}
            onClick={[Function]}
          />
        </styled.ul>,
      ],
      "onMouseEnter": [Function],
      "onMouseLeave": [Function],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "Dot": <styled.li />,
          "LeftArrow": <styled.button />,
          "RightArrow": <styled.button />,
          "afterSlide": null,
          "autoSlide": 2000,
          "beforeSlide": null,
          "children": Array [
            false,
            <styled.div>
              <styled.div
                translateX={0}
              >
                <styled.div
                  width={100}
                >
                  <div />
                </styled.div>
              </styled.div>
            </styled.div>,
            false,
          ],
          "hideArrowsOnNoSlides": true,
          "infinite": true,
          "margin": "0px",
          "padding": "0px 20px",
          "responsive": null,
        },
        "ref": null,
        "rendered": Array [
          false,
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <styled.div
                translateX={0}
              >
                <styled.div
                  width={100}
                >
                  <div />
                </styled.div>
              </styled.div>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <styled.div
                    width={100}
                  >
                    <div />
                  </styled.div>,
                ],
                "translateX": 0,
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": "0",
                  "nodeType": "class",
                  "props": Object {
                    "children": <div />,
                    "width": 100,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {},
                    "ref": null,
                    "rendered": null,
                    "type": "div",
                  },
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            "type": [Function],
          },
          false,
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <styled.li
              active={true}
              onClick={[Function]}
            />,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": "0",
            "nodeType": "class",
            "props": Object {
              "active": true,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <styled.div
            Dot={<styled.li />}
            LeftArrow={<styled.button />}
            RightArrow={<styled.button />}
            afterSlide={null}
            autoSlide={2000}
            beforeSlide={null}
            hideArrowsOnNoSlides={true}
            infinite={true}
            margin="0px"
            padding="0px 20px"
            responsive={null}
          >
            <styled.div>
              <styled.div
                translateX={0}
              >
                <styled.div
                  width={100}
                >
                  <div />
                </styled.div>
              </styled.div>
            </styled.div>
          </styled.div>,
          <styled.ul>
            <styled.li
              active={true}
              onClick={[Function]}
            />
          </styled.ul>,
        ],
        "onMouseEnter": [Function],
        "onMouseLeave": [Function],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "Dot": <styled.li />,
            "LeftArrow": <styled.button />,
            "RightArrow": <styled.button />,
            "afterSlide": null,
            "autoSlide": 2000,
            "beforeSlide": null,
            "children": Array [
              false,
              <styled.div>
                <styled.div
                  translateX={0}
                >
                  <styled.div
                    width={100}
                  >
                    <div />
                  </styled.div>
                </styled.div>
              </styled.div>,
              false,
            ],
            "hideArrowsOnNoSlides": true,
            "infinite": true,
            "margin": "0px",
            "padding": "0px 20px",
            "responsive": null,
          },
          "ref": null,
          "rendered": Array [
            false,
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <styled.div
                  translateX={0}
                >
                  <styled.div
                    width={100}
                  >
                    <div />
                  </styled.div>
                </styled.div>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    <styled.div
                      width={100}
                    >
                      <div />
                    </styled.div>,
                  ],
                  "translateX": 0,
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": "0",
                    "nodeType": "class",
                    "props": Object {
                      "children": <div />,
                      "width": 100,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {},
                      "ref": null,
                      "rendered": null,
                      "type": "div",
                    },
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
              "type": [Function],
            },
            false,
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <styled.li
                active={true}
                onClick={[Function]}
              />,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": "0",
              "nodeType": "class",
              "props": Object {
                "active": true,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
